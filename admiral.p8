pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--game for batleships
--a.makuhin 2022
--test

function _init()
	mouse.init()
 color=10
	init_game()
	_upd = update_select
	_drw = draw_select
	t = 0
	
end

function _update60()
 update_game()
 _upd()
 t+=1
 cam()
end

function _draw()
	cls(0)
	map()
	draw_reflects()
	draw_flot()	
	_drw()
	
		
	--print("wind is ".. wind,16,0)
	drawwndws()
	----draw wind arrow
	draw_wind()
	draw_bottom_menu()
	drw_debug()
	--print(test_check,cam_x+8,cam_y+8,8)
--[[
	print(turn,cam_x+8,cam_y+8,8)
	print(cam_oy,cam_x+16,cam_y+8,8)
	print(cam_x,cam_x+8,cam_y+16,8)
	print(cam_y,cam_x+32,cam_y+16,8)
--]]
end
-->8
--init
function init_game()
 debug={}
 dx8 = {0,1,1,1,0,-1,-1,-1}
	dy8 = {-1,-1,0,1,1,1,0,-1}
	gdx = {-1,0,1,1,1,0,-1,-1}
	gdy = {-1,-1,-1,0,1,1,1,0}
	l_sig={255,64,16,4,1,193,112,28,7,127,223,247,253,245,125,95,215,31,124,241,199,0,85,113,92,23,197,209,116,29,71,87,213,117,93,119,221,65,80,20,5,81,84,21,69,68,17,}
	l_msk={0,170,170,170,170,42,138,162,168,0,0,0,0,0,0,0,0,160,130,10,40,170,0,10,130,160,40,10,130,160,40,0,0,0,0,0,0,42,138,162,168,10,130,160,40,170,170,}
 test_check=false
	map_w,map_h=30,30
	
	f_size = 4
	names = {"boat",										
										"galera",
										"fregat",
										"galeon"										
										}
	anima=nil
	ani_exp={80,81,82,83,84,85,86,87,88}
	ani_bulk={96,97,98,99,100,101}
	ani_shoot={112,113,114,115,116,117} 
	flot = {}
	turn=0
	
	init_map()
	isl1=gen_island(8,8,15)
	isl2=gen_island(15,15,15)
	isl3=gen_island(22,22,15)
	do_isl_borders(isl1)
	do_isl_borders(isl2)
	do_isl_borders(isl3)
	
	for i = 1, f_size*2 do
		local _x,_y = -1,-1
		
		
		repeat			
				_x = flr(rnd(15))
				_y = flr(rnd(15))
			if i > f_size then
				_x+=map_w-15
				_y+=map_h-15
			end
		until getship(_x,_y) == nil and
								fget(mget(_x,_y),0)==false
		
		local adder=i%f_size
		
		flot[i] = {
		id = (i-1)%4+1,--for test 
		x = _x,
		y = _y,
		spd = adder==0 and 9 or 5+adder,
		hp = adder==0 and 6 or 2+adder,
		--hp=1,
		name = names[(i-1)%4+1],--for test
		fire_dist = 5+adder,
		damage=adder==0 and 4 or adder,					
		ox=0,
		oy=0,
		sox=0,
		soy=0,
		cur_mdir=0,
		cur_fdir=0,
		can_move=true,
		can_fire=true			
		}
		
		if i>f_size then
			flot[i].team=1
		else
			flot[i].team=0
		end
		flot[i].mt=flot[i].spd
		flot[i].cur_turns=flot[i].spd		
	end
		
	sel = 1
	wind = flr(rnd(8)) + 1
	
	turn_cells={}
	fire_cells={}
	wndws = {}
	choose = 0
	direct = 1	
	
	cw = nil--current window
	cs=nil--current ship
	t_x = 0
	t_y = 0
	f_x = 0
	f_y = 0
	t_ani=0
	t_upd=0
	dlt=0
	dur=0
	cam_x=flot[sel].x
	cam_y=flot[sel].y
	cam_ox=0
	cam_oy=0
	cam_sx=0
	cam_sy=0
	
	
	mw = add_main_wnd()--main window	
	--test windows--
	--addwnd(32,32,64,64,{"hello","world"})
end

function init_map()
	for _y=0,map_h do
		for _x=0,map_w do
			mset(_x,_y,16+flr(rnd(5)))
			--mset(_x,_y,16)
		end
	end
end


-->8
--update
function update_game()
		--update_mouse()	
	if t%15==0 then
		ani_map()
	end	
end

function ani_map()
	for _y=0,map_h do
		for _x=0,map_w do
			if flr(rnd(20))==10 and
			fget(mget(_x,_y),0)==false then				
				mset(_x,_y,16+flr(rnd(5)))
			end
		end
	end
end

function update_select()
	if btnp(1) then
		sfx(0)
		repeat
			cam_sx,cam_sy=cam_x,cam_y
			cam_ox,cam_oy=0,0
			sel += 1
			if sel > #flot then 
				sel = 1
			end
			local s=flot[sel]
		until s.team==turn and
								chek_can(s)--]]
	elseif btnp(0) then
		sfx(0)
		repeat
			cam_sx,cam_sy=cam_x,cam_y
			cam_ox,cam_oy=0,0
			sel -= 1
			if sel < 1 then
				sel = #flot
			end
			local s=flot[sel]			
		until s.team==turn and
								chek_can(s)--]]
	elseif btnp(4) then
		sfx(1)
		add_shipinfo_wnd()		
		_upd = update_action_select
		_drw = draw_action_select			
	end
end

function update_action_select()	
	local oldchose=choose
	if btnp(1) then
		sfx(0)
		choose = (choose+1)%3	
	elseif btnp(0) then
		sfx(0)
		choose = (choose-1)%3
	elseif btnp(3) and choose ~= 3 then
		oldchoose=choose
		choose=3
	elseif btnp(2) and choose == 3 then
		choose=oldchoose		
	elseif btnp(4) then		
		if choose == 0 then
			if flot[sel].can_move then
				sfx(1)
				del(wndws,cw)
				direct = wind
				calc_turn_cells()
				flot[sel].min_mt=flot[sel].spd			
				_upd = update_move_select
				_drw = draw_move_select
			else
				sfx(5)
			end
		elseif choose==1 then
			if flot[sel].can_fire then
				sfx(1)
				del(wndws,cw)
				direct = 1 
				calc_turn_cells()
				_upd = update_fire_select
				_drw = draw_fire_select
			else
				sfx(5)
			end
		elseif choose==2 then
			sfx(1)
			flot[sel].can_move=false
			flot[sel].can_fire=false
			del(wndws,cw)
			next_ship()
			_upd=update_select
			_drw=draw_select	
		elseif choose==3 then
			sfx(1)
			del(wndws,cw)
			for s in all(flot) do
				if s.team==turn then
					s.can_move=false
					s.can_fire=false					
				end				
			end
			change_turn()
			_upd=update_select
			_drw=draw_select		
		end
	elseif btnp(5) then
		sfx(1)
		del(wndws,cw)
		_upd = update_select
		_drw = draw_select
	end
end

function update_move_select()
	local s=flot[sel]
	local cc=turn_cells[direct]		
		
	if btnp(0) and s.can_move then
		sfx(0)			
		repeat 
			direct-=1
			if(direct<1) direct = 8
		until turn_cells[direct]>0	
									
	elseif btnp(1) and s.can_move then
		sfx(0)
		repeat
			direct+=1		
			if(direct>8) direct = 1					
		until turn_cells[direct]>0
		
	elseif btnp(2) then
		sfx(0)
		s.mt=min(s.mt+1,cc)	
	elseif btnp(3) then
		sfx(0)
		if(s.mt>cc) s.mt=cc
		s.mt=max(s.mt-1,1)		
	elseif btnp(4) then		
		sfx(1)
		if s.mt>cc then
		 s.mt=cc
		 s.can_move=false
		end
		local dx = dx8[direct]*s.mt
		local dy = dy8[direct]*s.mt
		s.cur_turns=cc-s.mt
		calc_turn_cells()
		if (s.cur_turns<1) s.can_move=false 				
		s.ox = -dx
		s.oy = -dy
		cam_sx,cam_sy=cam_x,cam_y
		s.sox=s.ox
		s.soy=s.oy
		s.x += dx
		s.y += dy
		t_upd=0
		cam_ox,cam_oy=0,0
		_upd = update_move
		_drw = draw_move
	elseif btnp(5) then
		sfx(1)
		add_shipinfo_wnd()
		_upd = update_action_select
		_drw = draw_action_select
	end	
		
end

function update_fire_select()
	local s=flot[sel]
	if btnp(0) then
		sfx(0)
		direct-=1		
		if(direct<1) direct = 8
	elseif btnp(1) then
		sfx(0)
		direct+=1
		if(direct>8) direct = 1
	elseif btnp(4) and s.can_fire then		
		sfx(2)
		s.can_fire=false
		if getship(t_x,t_y) then
			anima=ani_exp
		else
			anima=ani_bulk
		end
		_upd = update_fire
		_drw = draw_fire
	elseif btnp(5) then
		sfx(1)
		add_shipinfo_wnd()
		_upd = update_action_select
		_drw = draw_action_select
	end
	t_x=flot[sel].x+
	fire_cells[direct]*dx8[direct]
	t_y=flot[sel].y+
	fire_cells[direct]*dy8[direct]
end

function update_move()
	t_upd+=1
	--cam_ox,cam_oy=0,0
	local dur=10*flot[sel].mt--turn_cells[direct]
	local dlt=t_upd/dur
	ship = flot[sel]
	ship.ox = lerp(ship.sox,0,dlt)
	ship.oy = lerp(ship.soy,0,dlt)	
	if dlt>=1 then
		ship.mt=ship.spd
		if(not chek_can(ship))	next_ship()		
		_upd = update_select
		_drw = draw_select
	end
end

function update_fire()
	t_ani+=1
	dur=5*fire_cells[direct]
	dlt = t_ani/dur
	f_x=lerp(flot[sel].x,t_x,dlt)
	f_y=lerp(flot[sel].y,t_y,dlt)
	if(t_ani==dur) sfx(3)
	if t_ani<0 then
		t_ani=0
		cs=getship(t_x,t_y)
		if cs then
		cs.hp-=flot[sel].damage
		_upd=update_damage
		_drw=draw_damage
		else
			if(not chek_can(flot[sel]))	next_ship()
			_upd=update_select
			_drw=draw_select
		end		
	end
end

function update_damage()	
	t_ani+=1
	if t_ani>60 then
		t_ani = 0
		if cs.hp<=0 then
		sfx(4)
			_upd = update_death
			_drw = draw_death
		else
			if(not chek_can(flot[sel]))	next_ship()
			_upd = update_select
			_drw = draw_select
		end
	end
end

function update_death()
	t_ani+=1
	cs.oy=t_ani/60
	if cs.oy>1 then
		t_ani=0
		local prev_sel=sel
		if cs==flot[sel] then 
			sel=1
			
		end		
		del(flot,cs)
		sel=min(prev_sel,#flot)
		set_cam()
		cs=nil
		if(not chek_can(flot[sel]))	next_ship()
		_upd = update_select
		_drw = draw_select
	end
end


-->8
--draw
function draw_game()
	
	
	-------draw mouse--------
	--spr(64,mouse_x,mouse_y)
	-------------------------
end

function draw_flot()
	for i = 1, #flot do
		local s=flot[i]	
		local flp=false
		local ch_col=8	
		if s.team==1 then
			flp=true
			ch_col=1
		end
		pal(11,ch_col)
		if _upd==update_death then
			local c_x = peek2(0x5f28)
			local c_y = peek2(0x5f2a)
			clip(s.x*8-c_x,s.y*8-c_y,8,8)
			spr(s.id,(s.x+s.ox)*8,(s.y+s.oy)*8,1,1,flp)			
			clip()
		else
			spr(s.id,(s.x+s.ox)*8,(s.y+s.oy)*8,1,1,flp)			
		end
		pal()
	end
end

function draw_reflects()
	for i = 1, #flot do
		local s=flot[i]	
		local flp=false			
		if s.team==1 then
			flp=true			
		end		
		if _upd==update_death then
			local c_x = peek2(0x5f28)
			local c_y = peek2(0x5f2a)			
			clip(s.x*8-c_x,s.y*8-c_y+8,8,8)
			spr(s.id+4,(s.x+s.ox)*8,(s.y-s.oy)*8+8,1,1,flp)
		else			
			spr(s.id+4,(s.x+s.ox)*8,(s.y+s.oy)*8+8,1,1,flp)
		end		
	end
end

function draw_select()
	local x1 = flot[sel].x*8-1
	local y1 = flot[sel].y*8-1
	--spr(236,x1,y1)
	rect(x1,y1,x1+10,y1+10,9)
end

function draw_wind()

	local c_x = peek2(0x5f28)
	local c_y = peek2(0x5f2a)	
	circfill(10+c_x,116+c_y,7,7)
	circ(10+c_x,116+c_y,8,2)
	spr(255-wind+1,7+c_x,112+c_y)
	
end

function draw_action_select()	
	local c_x = peek2(0x5f28)
	local c_y = peek2(0x5f2a)
	local _txt=""	
	local x1,y1 = c_x+cw.x+16,
	c_y+cw.y+cw.h-20
	local x2 = x1 + 12
	local rx,ry = x1 + choose*12,y1
	if choose==3 then
		rx=x2
		ry+=9
	end
	local s = flot[sel]
	--rectfill2(x1-2,y1-2,36,12,9)
	--rectfill2(x1-1,y1-1,34,10,4)
	if choose==0 then
		_txt="move"
	elseif choose==1 then
		_txt="fire"
	elseif choose==2 then
		_txt="end ship turn"
	elseif choose==3 then
		_txt="end all turns"
	end	
	
	print(_txt,x1-12,y1-7,6)
	
	if s.can_move then 
		spr(237,x1,y1)
	else
		spr(234,x1,y1)
	end
	if s.can_fire then 
		spr(238,x2,y1)
	else
		spr(235,x2,y1)
	end
	spr(239,rx,ry)
	spr(221,x2+12,y1)
	spr(220,x2,y1+9)		
end

function draw_move_select()
	s=flot[sel]
	for i = 1,8 do
		local rx,ry = s.x,
																s.y
		for j = 1,turn_cells[i] do
			rx += dx8[i]
			ry += dy8[i]			
			spr(239,rx*8,ry*8)			
			if (i == direct and j<=s.mt) spr(223,rx*8,ry*8)					
		end		
	end 	 
end

function draw_fire_select()
	for i = 1,8 do
		local rx,ry = flot[sel].x,
																flot[sel].y
		local fire_dist = flot[sel].fire_dist
		
		for j = 1,fire_cells[i] do
			rx += dx8[i]
			ry += dy8[i]			
			pal(7,8)
			spr(239,rx*8,ry*8)
			pal()
			if i == direct then
			 spr(222,rx*8,ry*8)		
			end			
		end		
	end
end

function draw_move()

end

function draw_fire()
	local fr1 = ceil(t_ani/8)
	if fr1<=#ani_shoot then
		spr(ani_shoot[fr1],flot[sel].x*8,flot[sel].y*8)
	end
	if dlt<1 then
		spr(207,f_x*8,f_y*8)
	else
		local fr = ceil((t_ani-dur)/8)
		if fr<=#anima then
			spr(anima[fr],t_x*8,t_y*8)
		else
			t_ani=-10			
		end
	end
end

function draw_damage()
 local val=flot[sel].damage
 local dig_x = cs.x*8 
 local dig_y = cs.y*8 - t_ani/3
	print(-val,dig_x,dig_y,8)
end

function draw_death()
	
end

function draw_bottom_menu()
	local c_x = peek2(0x5f28)
	local c_y = peek2(0x5f2a)
	local team_spr = turn==0 and 205 or 206
	spr(team_spr,116+c_x,110+c_y)
	for i=1,f_size*2 do
	
		local s=flot[i]
		if s then
			local j=i<=f_size and i or i-f_size
			if s.team==turn then
				rectfill2(9+j*12+c_x,115+c_y,10,10,1)
				pal(11,s.team==0 and 8 or 12)
				spr(s.id,10+j*12+c_x,116+c_y)
				pal()
				if sel==i then
					rect(9+j*12+c_x,115+c_y,
					9+j*12+c_x+9,115+c_y+9,9)
						--spr(236,10+j*12+c_x,116+c_y)
				end
			end	
		end
	end
end

-->8
--generator and mouse
function gen_island(_ix,_iy,_lnd)
	local isl={}
	--mset(_ix,_iy,40)
	while _lnd>0 do
		for i=1,8 do
			local _dx,_dy=gdx[i],gdy[i]
			if fget(mget(_ix+_dx,_iy+_dy),0)==false then
				if flr(rnd(2))==1 then
					add(isl,{x=_ix+_dx,y=_iy+_dy,tle=40})
					local island=isl[#isl]
					mset(island.x,island.y,island.tle)				end
			end
		end
		_lnd-=1
		local jx,jy=0,0
		jx=flr(rnd(2))==1 and -1 or 1
		jy=flr(rnd(2))==1 and -1 or 1
		_ix+=jx
		_iy+=jy
	end
	return isl
end

function do_isl_borders(isl)
	local signs=getsign(isl)
	for i=1,#isl do
		local tle={x=isl[i].x,y=isl[i].y}
		local ch=222
		local s=signs[i]
		for t=1,47 do
			if bcomp(s,l_sig[t],l_msk[t],1) then
				ch=127+t				
			end				 
		end		
		mset(tle.x,tle.y,ch)		
	end
	
end

function getsign(arr)
 local sign_ls={}
 for i=1,#arr do
 	local sign=0
 	for j=1,8 do 		
			local m=fget(mget(arr[i].x+gdx[j],
			arr[i].y+gdy[j]),7)
			m=m==true and 1 or 0
			m=shl(m,8-j)
			sign=bor(sign,m) 		
 	end
 	--debug[i]=sign
 	sign_ls[i]=sign
 end
 return sign_ls
end



--------------
--mouse
--------------
mouse = {
  init = function()
    poke(0x5f2d, 1)
  end,
  -- return int:x, int:y, onscreen:bool
  pos = function()
    local x,y = stat(32)-1,stat(33)-1
    return stat(32)-1,stat(33)-1
  end,
  -- return int:button [0..4]
  -- 0 .. no button
  -- 1 .. left
  -- 2 .. right
  -- 4 .. middle
  button = function()
    return stat(34)
  end,
}

function update_mouse()
	mouse_x,mouse_y = mouse.pos()
  mouse_btn = mouse.button()
  
 -- if mouse_btn==1 then color=flr(rnd(15))+1 end
end
-->8
--tools
function calc_turn_cells()
	max_turns = flot[sel].cur_turns	
	turn_cells[wind] = max_turns
	for i = 1,4 do
		max_turns = max(max_turns-1,0)
		local direct1 = wind + i
		local direct2 = wind - i
		if (direct1>8) direct1 -= 8
		if (direct2<1) direct2 += 8
		
		turn_cells[direct1] = max_turns
		turn_cells[direct2] = max_turns
	end	
	for i=1,8 do
		local s = flot[sel]
		local rx,ry = s.x,
																s.y
		for j=1,10 do
			rx+=dx8[i]
			ry+=dy8[i]
			if getship(rx,ry) or
						rx<0 or ry<0 or
						rx> map_w or ry>map_h or
						fget(mget(rx,ry),0) then
				fire_cells[i]=j
				turn_cells[i]=min(turn_cells[i],j-1)
				break
			elseif	rx<0 or ry<0 or
										rx> map_w or ry>map_h  or
										fget(mget(rx,ry),0)  then
				fire_cells[i]=min(s.fire_dist,j-1)
				if turn_cells[i]>j then
					turn_cells[i]=j-1
				end
				break			
			end
			fire_cells[i] = min(s.fire_dist,j)
		end
	end	
end

function rectfill2(x,y,w,h,c)
	rectfill(x,y,x+w-1,y+h-1,c)
end

function add_main_wnd()
	local camera_x = peek2(0x5f28)
	local camera_y = peek2(0x5f2a)
	return addwnd(0,104,128,24,
	{"      i am main window!",
	})
end

function add_shipinfo_wnd()
	ship = flot[sel]
	local camera_x = peek2(0x5f28)
	local camera_y = peek2(0x5f2a)
	cw = addwnd(32,6,64,80,
	{""..ship.name,
		"-------------",
		"team..."..(ship.team==0 and "red" or "blue"),
		"speed.."..ship.spd,
		"health.."..ship.hp,
		"damage.."..ship.damage,
		"-------------",			
	"select action:"})
	choose = 0		
end

function getship(_x,_y)
	for s in all(flot) do
		if s.x==_x and s.y==_y then
			return s
		end
	end
	return nil
end

function lerp(b,e,d)
	if(d>1) return e
	return b*(1-d)+e*d
end

function cam()
	if flot[sel] then
	 sx,sy=flot[sel].x*8+4,flot[sel].y*8+4
	end
	if cam_ox<1 then
	 cam_ox+=0.05
	else
		cam_ox=1 
	end
	if cam_oy<1 then
	 cam_oy+=0.05
	else
		cam_oy=1
	end
	cam_x=lerp(cam_sx,sx,cam_ox)
	cam_y=lerp(cam_sy,sy,cam_oy)
	cam_x=max(cam_x,64)
	cam_y=max(cam_y,64)
	cam_x=min(cam_x,map_w*8-56)
	cam_y=min(cam_y,map_h*8-32)
	camera(cam_x-64,cam_y-64)
end

function chek_can(s)
	return s.can_move or s.can_fire
end

function chek_endturn()	
 for s in all(flot) do
		if s.team==turn and
					(s.can_move or
					s.can_fire) then						
			return false			
		end
	end	
	return true
end

function chek_loose()
	local count = 0
	for s in all(flot) do
		if(s.team==turn) count+=1
	end
	if count==0 then
		return true
	else
		return false
	end
end

function change_turn()
	if chek_endturn() then
		for s in all(flot) do
		 if s.team==turn then
		 	s.mt=s.spd
		 	s.cur_turns=s.spd
		 	s.can_move=true
		 	s.can_fire=true
		 end
		end
		turn = (turn+1)%2		
		if not chek_loose() then			
			sel=0		
			repeat 
				sel+=1
			until flot[sel] and flot[sel].team==turn
			cam_ox,cam_oy=0,0
			cam_sx,cam_sy=cam_x,cam_y
			cam_x,cam_y=flot[sel].x,flot[sel].y
		else
			turn=(turn+1)%2
		end
	end
end	

function set_cam()
	cam_ox,cam_oy=0,0
	cam_sx,cam_sy=cam_x,cam_y
	cam_x,cam_y=flot[sel].x,flot[sel].y
end

function next_ship()
	change_turn()
	repeat 
		sel+=1
		if(sel>#flot) sel=1
	until chek_can(flot[sel]) and
							flot[sel].team==turn
	set_cam()
end

function drw_debug()
	local x,y=6,6
	local c_x = peek2(0x5f28)
	local c_y = peek2(0x5f2a)
	for v in all(debug) do
		print(v,x+c_x,y+c_y,9)
		y+=7
	end
end

function bcomp(v1,v2,msk,bit)
	if v1==v2 then
		return true
	elseif bit==0b100000000 then
		return false
	else
		local bmsk=band(msk,bit)
		bit=shl(bit,1)
		local v2_1=bor(v2,bmsk)
		return bcomp(v1,v2,msk,bit) or
									bcomp(v1,v2_1,msk,bit)
	end
end

--[[semms to be unneeded
function max_turns()
	local mt=0
	for t in all(turn_cells) do
		if(t>mt) mt=t
	end
	retur mt
end
--]]
-->8
--ui
function addwnd(_x,_y,_w,_h,_txt)
	local w = {x=_x,
												y=_y,
												w=_w,
												h=_h,
												txt=_txt}
	add(wndws,w)
	return w	
end

function drawwndws()	
	for w in all(wndws) do
		local camera_x = peek2(0x5f28)
		local camera_y = peek2(0x5f2a)
		local wx,wy,ww,wh,wtxt = 
		w.x+camera_x,w.y+camera_y,
		w.w,w.h,w.txt		
		rectfill2(wx,wy,ww,wh,2)
		rectfill2(wx+1,wy+1,ww-2,wh-2,15)
		rectfill2(wx+2,wy+2,ww-4,wh-4,4)
	
		wx+=4
		wy+=4
		--clip(wx-camera_x,wy-camera_y,wx+ww-8,wy+wh-8)
		for i = 1,#wtxt do
			print(wtxt[i],wx,wy,15)
			wy+=6
		end	
	end
	
	if _drw==draw_action_select then
		_drw()
	end	
end
__gfx__
00000000000000000000000000009bbb009bb9bb0022220002222220022222200222222000000000000000000000000000000000000000000000000000000000
000000000009bb007709bbb0097767000767767002d2d2d0d0d2d20dd2d2d2d22d2d2d2d00000000000000000000000000000000000000000000000000000000
0070070000666000677700000767670076667670000d0d00020d0d000d0d0d00d0d0d0dd00000000000000000000000000000000000000000000000000000000
000770000077770067777000776777707767667700d0d00000d0000000d0d0d00d0d0d0000000000000000000000000000000000000000000000000000000000
0007700000777770067777007767776744777664000000000d0000000000000000d0d0d000000000000000000000000000000000000000000000000000000000
00700700000900700666666044909000424242440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000042424404009000444242424442424400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000004444000444444004444440044444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccccccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccccccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccccc6ccccccccccccccc7ccccccccccc6cccc6c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccccccccccccccccccccccccc6cccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc6ccccccccccccccccccccccc6ccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ccccccccccc7cccccccccccccccccccccccc6ccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccccccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccccccccccccccccccccccccccccccccccccccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
fffffffff9333333333333333333339fccfffffff93333333333339fffffffcc3333333300000000000000000000000000000000000000000000000000000000
99999999f9333333333333333333339fcff99999f93333333333339f99999ffc3383338300000000000000000000000000000000000000000000000000000000
33333333f9333333333333333333339fff933333f93333333333339f333339ff3388388300000000000000000000000000000000000000000000000000000000
33333333f9333333333333333333339ff9333333f93333333333339f3333339f3338883300000000000000000000000000000000000000000000000000000000
33333333f9333333333333333333339ff9333333f93333333333339f3333339f3338883300000000000000000000000000000000000000000000000000000000
33333333f9333333333333333333339ff9333333ff933333333339ff3333339f3388383300000000000000000000000000000000000000000000000000000000
33333333f9333333999999993333339ff9333333cff9999999999ffc3333339f3333388300000000000000000000000000000000000000000000000000000000
33333333f9333333ffffffff3333339ff9333333ccffffffffffffcc3333339f3333333300000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66600005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55600005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55566665000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66555655000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55655555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555555000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00567000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00566700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00566600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00566700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00055600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000a00000a00000008600000600600000606000006000060060000060000000000000000000000000000000000000000000000000000000000
00000000000a00000880080008056050606506665006566060000665006000006000000000000000000000000000000000000000000000000000000000000000
00000000008a88000880800000555600056665006650660005000000000600000000000000000000000000000000000000000000000000000000000000000000
000aa0000888a880000550a005555500005556060566006000006060000006000000000000000000000000000000000000000000000000000000000000000000
000aa00008aa88800805550080565050050565000050606000000000006000000000000000000000000000000000000000000000000000000000000000000000
00000000a8888a000080588000505000055556505060000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000008800a00a80000000000580560050000000600000600000000000600000000000000000000000000000000000000000000000000000000000000000
00000000000000000008008000800000056000560000000000000000000000000000006000000000000000000000000000000000000000000000000000000000
00000000000070000011770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001177000111177000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000170001101107701100070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00010000000170000001100011000117001107000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100700000170000001700010017010010000700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01007070001007000001700000117007100010070010700000000000000000000000000000000000000000000000000000000000000000000000000000000000
10010007110000770011770001000700011107000101007000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000660000000066000660056006000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000006666000006656600566000006600000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066000066656600666655600556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00056000055665600566560000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000005566000566550000066600000066000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000550000555000000056600000006000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
33333333cf333fcccfffcccccccccccccccccccc33333fccccf33333ccccccccccccccccccff33333ff33fcc33333333333333f33333b333ccf33333ccf33fcc
333b3333ccf33fccf333ffcccccccccccfcfcccc333b3fcccf333333cccccffccccfccccccccf333fccffccc333333333fffffcf33333333cccf3333ccf33fcc
33333333ccf333fcf3333fffcccfffffffffcffc333333fcccf33333ccccf33ffff3fcfcfccccf33fccccccf333fff33fccccccf333333f3ffccf333fcf3fccf
33333333cf3333fccf333333ccf3333f3333fccc33333fccccf33333ccff333333333fcc3fcccf33fccccccf33fcccf3fcccccf333333fcf33ff3333fccffccf
33333333cf3333fcccff3333cf33333f33333fcc33333fccccf3b333cf33333333333fcc3fccf333fccccccf3fcccccffccfff333333fccf333333333fcf3fcf
33333333cf3333fcccccffffcf3333fcff333fccf33ffccccccff33fcf3333b3333333fc33ff33333ffccff33fcccccffcccf3333f33fccfffff333333f333f3
33333333ccf333fccccfccfccff333fccfffffcccffcccccccfccffcccf3333333b333fc33333333333ff33333fcccccccccf3b3fcf33fccccccf33333333333
33333333cccfffccccccccccccf33fccccccccccccccccccccccccccccf3333333333fcc333333b3b3333333333fffccccff3333ccf33fccccff333333333b33
333fffcccccfffccccf333333333333333333fcccccffcccccf33fccccf3ff33ccf33fccccccfffcb3333fcc33333fccccf33333ccccccccccf33fccccf33fcc
33fccccccff333fccf333333b33ff33b3b3333ffccf33fcccf3333ffcccfccf3ccf33fcccfff33fc3333fccc33b333fccccf3333ccccccccccf333fccccf33fc
333ffffff333333fcfff33b333fccf333333333fcf33b3fcf333b333fccccf33cf33fccff333333f33f3fccc3333333fccccf333ffffccfffccf333fffcf333f
b333333333333333ccccf3333fcccf333333333ff33333fc333333333fccf333cf333fcf333333333fcffccc33333333ccccf3f3333fccf33fccf3fc33f33333
3333ff33333b3333ccccf3333fccccf3333333fcf333333f3333333333ff3b33cf333fcf333b3333fccf3fcc33333333cccf3fcf333fccf33fccf3fc333ff333
333fccff33333333cccf3333ffccccff333333fccf3333fcf333333fff33333fcf3333f333333ffffccf33fcf33333ffccf33fcfff3fcf333fccf3fc33fccfff
333fcccc33333333cccf3333cccccccc333333fccf33ffcccf3333fcccf33ffccf33b3333333fcccccf3b3fccf333fccccf33fccccf3f33333ff3fcc333fcccc
3333ffcc33333333ccf33333cccccccc33333fcccfffccccccf33fcccccffcccccf3333333333fccccf33fccccfffcccccf33fccccf3333333333fcc3333ffcc
33333fccccf33333ccf33fccccf3333333333fccccf33fccccf33fccfffcccccccccccccccf33fccccf33fccccccffccccf33fcccf333fcccccccccc00000000
333333fccf333333cf3333fcccf3333333333fccccf333fccf333fccf33ffffccccccffccf33fccccccf33fccfff33fcccf33fccf3333fccccffffcc00000000
3333333ff3333333f333333fff333333333333ffff33333fcf33fccfcf33333fffccf3fcf33fcccfcccf333ff333333fff333fccf33333fcff3333ff00000000
3333333333333333333333333333333333333333333333fccf33fcf3f333333333ff33fc3333fccfccf3333333f33333333333fcf33333fc3333333300000000
3333333333333333333333333333333333333333333333fcccf33f33cf333333333333fc33333ff3cf3333333fcf33333ff333fcf33333fc3333333300000000
f333333ff333333ff3333333333333ffff333333fff333fccf33333fcf33333fff3333fcff33333fcf333fffffccf33ffccf33fccf3333fcf333333f00000000
cf3333fccf3333fccf33333333333fccccf33333cccfffcccf3333fcccf333fcccf333fcccff33fccf33fccccccf33fccccf33fcccf333fccff333fc00000000
ccf33fccccf33fccccf3333333333fccccf33333ccccccccccffffccccf33fccccf33fccccccffccccf33fccccf33fccccf33fccccf33fcccccfffcc00000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000088888800cccccc000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000288888201ccccc1000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000288882001cccc10000011000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000288820001ccc100000117100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000288880001cccc00000111100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000288888001ccccc0000011000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000288888801cccccc000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000222222221111111100000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005555550000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066ff660000000b00009900000666d00
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066660007000b300049f900006dd100
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006ff6000b70b30000449900006dd100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006ffff6000bb30000004400000d11100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005555550000300000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000070000000000077000077000070000000000007700770
0000000000000000000000000000000000000000000000000000000000000000000000000000000000005700660500007000000700001700a808000070000007
00000000000000000000000000000000000000000000000000000000000000000000000000000000000005700000055000000000000001700000011070000007
00000000000000000000000000000000000000000000000000000000000000000000000000000000666666676650557500000000ddddddd7aa80117100000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000555555650000555500000000111111d10000111100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000650650505500000000000000d10a808011070000007
000000000000000000000000000000000000000000000000000000000000000000000000000000000000650000000000700000070000d1000000000070000007
00000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000000077000077000010000000000007700770
00000000000000000000000000000000000000000000000000000000000000008888000000000000000000080008100080000000000000000000888800081000
00000000000000000000000000000000000000000000000000000000000000001880000000800000000000810008100018000000000008000000088100881100
00000000000000000000000000000000000000000000000000000000000000001180000008800000000008100008100001800000000008800000081108881110
00000000000000000000000000000000000000000000000000000000000000001018000088888888000081000008100000180000888888880000810100081000
00000000000000000000000000000000000000000000000000000000000000000001800011111111800810000008100000018008111111110008100000081000
00000000000000000000000000000000000000000000000000000000000000000000180001100000888100000888111000001888000001100081000000081000
00000000000000000000000000000000000000000000000000000000000000000000018000100000881000000088110000000188000001000810000000081000
00000000000000000000000000000000000000000000000000000000000000000000001800000000111100000008100000001118000000008100000000081000
__gff__
0001010101000000000000000000000000000000000000000000000000000000818181818181818181000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1212121212121212121212121212121200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000742007420074201f4000b4000b4000a40009400004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001b7502d7503f7503075021750167500f7500a750077500475002750017500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000300003d6503f6503f6503c650336502b64024640206401c6401964013640106300e6300d6300c6300b6300a630086200762006620046200462003610036100361003610036100261005600046000360003600
000400003f6103f6403f6703f6703f6703f6603f6603b660366503465029650226501c640186401564012640106300c6300a63008630076300562005620056100461004610036100361002610036100361003610
00050000041200a120081200f1200d12015120121201a120161201c120171201b12015120191201412017120121201512010120141100e110121100c110101100b11010110091100c110071100a1100511003110
0003000023330153300b3200632002310023000130000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
